{"version":3,"sources":["Customs/CustomButton/CustomButton.jsx","Homepage/Homepage.jsx","Redux/UserReducer/userAction.jsx","Redux/TeamReducer/TeamAction.jsx","Header/Header.jsx","Loginpage/Loginpage.jsx","Redux/TaskReducer/TaskAction.jsx","Customs/Dropdown/Dropdown.jsx","Constants.js","Customs/AddModal/AddModal.jsx","Customs/CustomCard/Customcard.jsx","AllTasks/AllTasks.jsx","Taskpage/TaskPage.jsx","App.js","reportWebVitals.js","Redux/UserReducer/userReducer.jsx","Redux/TeamReducer/TeamReducer.jsx","Redux/TaskReducer/TaskReducer.jsx","Redux/rootReducer.jsx","Redux/store.jsx","index.js"],"names":["CustomButton","name","style","clickHandler","Fragment","className","type","onClick","Homepage","history","useHistory","push","padding","backgroundColor","fontSize","letterSpacing","borderColor","setCurrentUser","user","payload","setCurrentUserDetails","setTeamDetails","connect","state","currentUser","dispatch","userDetails","teamDetails","useState","menu","setmenu","to","title","previousState","class","marginRight","localStorage","removeItem","email","password","userData","setuserData","onSubmit","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","json","data","status","setItem","loginStatus","token","results","required","placeholder","onChange","target","value","minWidth","marginTop","getTaskDetails","task","Dropdown","label","selectList","iconName","selectHandler","handlerType","show","setshow","pointerEvents","display","map","option","timeInputList","team","tasks","closeHandler","httpMethod","assin_userList","filter","x","user_status","desc","date","time","assignedUser","isCompleted","taskData","settaskData","timelabel","settimelabel","changeHandler","useEffect","console","log","undefined","agn_user","find","id","assigned_user","arr","document","getElementById","getElementsByTagName","count","length","innerText","selectedIndex","task_time","hrs","Math","floor","mins","DayorNyt","finalTime","task_msg","task_date","is_completed","ReactDOM","createPortal","hours","Number","match","minutes","dayOrNyt","timeInSeconds","postFetchUrl","time_zone","Date","getTimezoneOffset","message","alert","disabled","max","t","user_id","justifyContent","margin","color","borderRadius","border","Customcard","index","DeleteHandler","modalStatus","setmodalStatus","view","setview","taskDetails","isDeleted","window","confirm","taskName","TaskPage","open","setopen","parse","getItem","exact","path","component","AllTasks","Loginpage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","currentUserDetails","combineReducers","action","store","createStore","rootReducer","render","StrictMode"],"mappings":"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","file":"static/js/main.04744e34.chunk.js","sourcesContent":["import React from 'react';\r\nimport './CustomButton.scss';\r\n\r\nconst CustomButton = ({name,style,clickHandler}) => {\r\n    return (\r\n        <React.Fragment>\r\n            <button  style={style} className='btn' type='submit' onClick={clickHandler}>\r\n                {name}\r\n            </button>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CustomButton\r\n","import React from 'react'\r\nimport './Homepage.scss'\r\nimport CustomButton from '../Customs/CustomButton/CustomButton'\r\nimport { useHistory } from 'react-router'\r\nconst Homepage = () => {\r\n\r\n    const history = useHistory();\r\n    const homeHandler=()=>{\r\n        history.push('/alltasks');\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <div className='bdy-bg'>\r\n                <div className='bdy-bg2'>\r\n                    <div className='bdy-container'>\r\n                        <p>Explore the registered <span>T</span>asks now \r\n                        <CustomButton clickHandler={homeHandler} style={{padding:'1rem 4rem', backgroundColor:'transparent', fontSize:'1.1rem',letterSpacing:'0.1rem',borderColor:'white'}} name='Take a Follow up'/>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","export const setCurrentUser= user =>({\r\n    type:'SET_CURRENT_USER',\r\n    payload: user\r\n});\r\n\r\nexport const setCurrentUserDetails= user =>({\r\n    type:'SET_CURRENT_USER_DETAILS',\r\n    payload: user\r\n});\r\n\r\n","export const setTeamDetails= user =>({\r\n    type:'SET_TEAM_DETAILS',\r\n    payload: user\r\n});","import React,{useState} from 'react'\r\nimport {Link, useHistory} from 'react-router-dom'\r\nimport './Header.scss';\r\nimport CustomButton from '../Customs/CustomButton/CustomButton';\r\nimport {connect } from 'react-redux';\r\nimport {setCurrentUser,setCurrentUserDetails} from '../Redux/UserReducer/userAction'\r\nimport {setTeamDetails} from '../Redux/TeamReducer/TeamAction'\r\n\r\n\r\nconst Header = ({setCurrentUser,currentUser,setTeamDetails,setCurrentUserDetails}) => {\r\n\r\nconst [menu, setmenu] = useState(false);\r\nlet history= useHistory();\r\n\r\nconst LoginHandler= ()=>{\r\n    history.push('/login')\r\n}\r\nconst LogoutHandler=()=>{\r\n    localStorage.removeItem('currentUser');\r\n    setCurrentUser(null);\r\n    setCurrentUserDetails(null);\r\n    setTeamDetails(null);\r\n}\r\n    return (\r\n        <React.Fragment>\r\n            <header className='hd-container'>\r\n                <div className='hd-logo'>\r\n                    <span>DEMO</span>\r\n                </div>\r\n                <div className='hd-hide'>\r\n                <Link className='hd-link' to='/home'><i title='Home' className=\"fa fa-home\"></i></Link>\r\n                <Link className='hd-link' to='/tasks'><i title='Tasks'className=\"fa fa-tasks\"></i></Link>\r\n                <Link className='hd-link'><i title='Contact'className=\"fa fa-address-card\"></i></Link>\r\n                </div>\r\n                <div className='hd-menu hd-link' onClick={()=>setmenu(previousState=>!previousState)}>\r\n                    { menu ===true ? <i title='close the menu' class=\"fas fa-times\"></i> :\r\n                    <i title='Menu' className=\"fas fa-bars \"></i> }\r\n                </div>\r\n                <div style={{marginRight:'1rem'}}>\r\n                {   currentUser === null ? \r\n                    <CustomButton className='hd-login' name='Login' clickHandler={LoginHandler}/> :\r\n                    <CustomButton className='hd-login' name='Signout' clickHandler={LogoutHandler}/>\r\n                }\r\n                </div>\r\n            </header>\r\n            { menu ===true ?\r\n            <div className='fullheader'>\r\n                    <Link className='hd-link' onClick={()=>setmenu(previousState=>!previousState)} to='/home'><i title='Home' className=\"fa fa-home\"></i></Link>\r\n                    <Link className='hd-link' onClick={()=>setmenu(previousState=>!previousState)} to='/tasks'><i title='Tasks'className=\"fa fa-tasks\"></i></Link>\r\n                    <Link className='hd-link' onClick={()=>setmenu(previousState=>!previousState)}><i title='Contact'className=\"fa fa-address-card\"></i></Link>\r\n                    </div> : null }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps= dispatch =>({\r\n    setCurrentUser : user=> dispatch(setCurrentUser(user)),\r\n    setCurrentUserDetails : userDetails=> dispatch(setCurrentUserDetails(userDetails)),\r\n    setTeamDetails : teamDetails => dispatch(setTeamDetails(teamDetails))\r\n})\r\n\r\nconst mapsStateToProps= state=>({\r\n    currentUser: state.user.currentUser,\r\n})\r\nexport default connect(mapsStateToProps,mapDispatchToProps)(Header)\r\n","import React,{useState} from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {setCurrentUser} from '../Redux/UserReducer/userAction'\r\nimport CustomButton from '../Customs/CustomButton/CustomButton'\r\nimport './Loginpage.scss'\r\nimport {useHistory} from 'react-router'\r\n\r\n\r\nconst Loginpage = ({setCurrentUser}) => {\r\n\r\n    let history = useHistory();\r\n    const [userData, setuserData] = useState({email:'',\r\n                                              password:''});\r\n\r\n    const FormCloseHandler=()=>{\r\n        history.push('/home');\r\n    }\r\n\r\n    const SigninHandler=(event)=>{\r\n\r\n        event.preventDefault();\r\n\r\n        fetch('https://stage.api.sloovi.com/login',{\r\n            method:'POST',\r\n            headers:{\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',          \r\n              },\r\n              body:JSON.stringify(userData)}).then(response=>response.json())\r\n              .then(data=>{                  \r\n                if(data.status === 'success'){\r\n\r\n                    localStorage.setItem('currentUser',JSON.stringify({...userData, loginStatus:true, token: data.results.token}));\r\n                    setCurrentUser({...userData, loginStatus:true, token: data.results.token});\r\n                }\r\n                })\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='lg-container'>\r\n                <form className='lg-form-container' onSubmit={SigninHandler}>\r\n                    <div className='lg-form-close' onClick={FormCloseHandler}>x</div>\r\n                    <span>LOGIN</span>\r\n                    <div className='input-containter'>\r\n                        <div className='input-logo'>\r\n                        <i className=\"fa fa-user\"></i>\r\n                        </div>\r\n                        <input type='email' required placeholder='Email Address'onChange={(event)=>setuserData({ ...userData, email: event.target.value})}/>\r\n                    </div>\r\n                    <div>\r\n                    <div className='input-containter'>\r\n                        <div className='input-logo'>\r\n                            <i className=\"fa fa-key\"></i>\r\n                        </div>\r\n                        <input type='password' required placeholder='password' onChange={(event)=>setuserData({ ...userData, password: event.target.value})}/>\r\n                        </div>\r\n                    </div>\r\n                    <CustomButton name='SIGN-IN'\r\n                        style={{minWidth: '300px',marginTop:'1rem'}}\r\n                    />\r\n                </form>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps= dispatch =>({\r\n\r\n    setCurrentUser : user => dispatch(setCurrentUser(user))\r\n})\r\nexport default connect(null,mapDispatchToProps)(Loginpage)\r\n","export const getTaskDetails= task =>({\r\n    type:'GET_TASK_DETAILS',\r\n    payload: task\r\n});","import React,{useState} from 'react'\r\nimport './Dropdown.scss'\r\n\r\nconst Dropdown = ({label, selectList,iconName,selectHandler,handlerType=false}) => {\r\n\r\n    const [show, setshow] = useState(false)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className='dd-container'  style={handlerType ===true ?{pointerEvents: 'none'} : null} onClick={()=>setshow(previousState=>!previousState)}>\r\n                <div className='dd-box' style={handlerType ===true ?{backgroundColor:'rgba(0,0,0,0.1)'} : null}>\r\n                    <i className={`fa fa-${iconName}`}></i>\r\n                    <span>{label}</span>\r\n                </div>\r\n                <div className='dd-list' style={show===true ? {display: 'flex'} : null}>\r\n                    {\r\n                        selectList.map((option)=>(\r\n                            <span onClick={(event)=>selectHandler(event)} value={option}>{option}</span>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Dropdown\r\n","export const timeInputList =['12:00 AM','12:30 AM', '01:00 AM','01:30 AM','02:00 AM','02:30 AM','03:00 AM', '03:30 AM', '04:00 AM', '04:30 AM', '05:00 AM', '05:30 AM',\r\n'06:00 AM','06:30 AM', '07:00 AM','07:30 AM','08:00 AM','08:30 AM','09:00 AM', '09:30 AM', '10:00 AM', '10:30 AM', '11:00 AM', '11:30 AM',\r\n'12:00 PM','12:30 PM', '01:00 PM','01:30 PM','02:00 PM','02:30 PM','03:00 PM', '03:30 PM', '04:00 PM', '04:30 PM', '05:00 PM', '05:30 PM',\r\n'06:00 PM','06:30 PM', '07:00 PM','07:30 PM','08:00 PM','08:30 PM','09:00 PM', '09:30 PM', '10:00 PM', '10:30 PM', '11:00 PM', '11:30 PM']","import React,{useState,useEffect} from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport {connect} from 'react-redux'\r\nimport CustomButton from '../CustomButton/CustomButton'\r\nimport Dropdown from '../Dropdown/Dropdown'\r\nimport {timeInputList} from '../../Constants';\r\nimport './AddModal.scss'\r\nimport {getTaskDetails} from '../../Redux/TaskReducer/TaskAction'\r\n\r\n\r\nconst AddModal = ({currentUser,closeHandler,team,task,getTaskDetails,httpMethod,handlerType}) => {\r\n\r\n    const assin_userList=team.data.filter(x=>x.user_status === 'accepted');\r\n    const [taskData, settaskData] = useState({\r\n        desc:'',\r\n        date: '',\r\n        time: 0,\r\n        assignedUser:'',\r\n        isCompleted: 0\r\n    })\r\n    const [timelabel, settimelabel] = useState('Time')\r\n\r\n    const selectHandler=(event)=>{\r\n        let time = event.target.innerText;\r\n        settimelabel(time);\r\n        settaskData({...taskData, time: time} )\r\n    }\r\n\r\n    const changeHandler=(event)=>{\r\n        settaskData({...taskData, [event.target.name] : event.target.value});\r\n    }\r\n\r\n    const TaskSubmitHandler=(event)=>{\r\n        event.preventDefault();\r\n\r\n        if(taskData.time === 0 || taskData.assignedUser==='')\r\n            return;    \r\n\r\n        //Convert time to Seconds\r\n        var time = taskData.time;\r\n        var hours = Number(time.match(/^(\\d+)/)[1]);\r\n        var minutes = Number(time.match(/:(\\d+)/)[1]);\r\n        var dayOrNyt = time.match(/\\s(.*)$/)[1];\r\n        if(dayOrNyt === \"PM\" && hours<12) hours = hours+12;\r\n        if(dayOrNyt === \"AM\" && hours===12) hours=0;\r\n        var timeInSeconds = hours * 3600 + minutes*60;\r\n\r\n        var postFetchUrl='';\r\n        \r\n        if(httpMethod==='PUT')\r\n            postFetchUrl= 'https://stage.api.sloovi.com/task/lead_6996a7dcdddc4af3b4f71ccb985cea38/' +task.id;\r\n        else\r\n            postFetchUrl= 'https://stage.api.sloovi.com/task/lead_6996a7dcdddc4af3b4f71ccb985cea38'; \r\n\r\n        //Add task using POSTorPUT method            \r\n        fetch(postFetchUrl,\r\n        {\r\n            method: httpMethod,\r\n            headers : {\r\n                'Authorization': 'Bearer ' + currentUser.token,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',          \r\n              },\r\n            body :JSON.stringify({\r\n                assigned_user:  taskData.assignedUser, \r\n                task_date: taskData.date,\r\n                task_time: timeInSeconds,\r\n                is_completed: taskData.isCompleted,\r\n\t\t        time_zone: new Date().getTimezoneOffset(),\r\n                task_msg: taskData.desc\r\n               })\r\n        }).then(response=>response.json()).then(data=>{\r\n                if(data.status==='success' && data.message==='Updated successfully'){\r\n                  fetch('https://stage.api.sloovi.com/task/lead_6996a7dcdddc4af3b4f71ccb985cea38',{\r\n                    method:'GET',\r\n                    headers : {\r\n                        'Authorization': 'Bearer ' + currentUser.token,\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',          \r\n                      }\r\n                }).then(response=>response.json()).then(data=>{\r\n                    getTaskDetails(data.results)\r\n                })\r\n      \r\n                }\r\n              }\r\n        )\r\n\r\n        closeHandler(previousState=>!previousState);\r\n        alert(`Successfully ${httpMethod==='PUT'? 'updated' : 'added'} the task`);\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        console.log(handlerType)\r\n        if(task !== null && task !== undefined)\r\n        {\r\n\r\n            //Getting assigned User by Name\r\n            var agn_user='';\r\n            agn_user= team.data.find(x=>x.id === task.assigned_user);\r\n            if(agn_user ===null || agn_user === undefined)\r\n                agn_user=task.assigned_user;\r\n            else\r\n                agn_user=agn_user.name\r\n\r\n            var arr= document.getElementById(\"assignedUser\").getElementsByTagName('option');\r\n            var count=-1;\r\n            for(var x=0; x < arr.length; x++){\r\n                \r\n                if(arr[x].innerText === agn_user)\r\n                {\r\n                    count=x;\r\n                    break;\r\n                }\r\n                \r\n            }\r\n            document.getElementById(\"assignedUser\").selectedIndex = count ===-1 ? '0' : count ;\r\n\r\n            //convert seconds to time\r\n            var time= task.task_time;\r\n            var hrs= Math.floor(time/3600);\r\n            var mins= time%60;\r\n            if(mins>= 15 && mins <= 45 ){mins=30}else{mins=0}\r\n            var DayorNyt='';\r\n            if(hrs >12) {hrs=hrs-12; DayorNyt='PM';}else{DayorNyt='AM'}\r\n            if(mins ===0 ) { mins='0'+ mins}\r\n            if(hrs <10){hrs='0'+ hrs}\r\n\r\n            var finalTime= hrs +':'+ mins + ' ' + DayorNyt;\r\n            settaskData({\r\n                    desc: task.task_msg,\r\n                    date: task.task_date,\r\n                    time: finalTime,\r\n                    assignedUser:agn_user,\r\n                    isCompleted: task.is_completed\r\n            });\r\n            settimelabel(finalTime);\r\n\r\n        }\r\n    }, [])\r\n\r\n    return ReactDOM.createPortal(\r\n        <React.Fragment>\r\n            <div className='addtk-bg-container'>\r\n                <div className='addtk-container'>\r\n                    <div className='addtk-hd'>\r\n                      <p>TASKS</p>\r\n                      <span onClick={()=>closeHandler(previousState=>!previousState)}>x</span>\r\n                    </div>\r\n                    <form className='addtk-body-container' onSubmit={TaskSubmitHandler}>\r\n                        <div className='input-div'>\r\n                            <span>Text Description</span>\r\n                            <input type='text' required value={taskData.desc} name='desc'\r\n                                disabled= {handlerType}\r\n                                onChange={changeHandler}/>\r\n                        </div>\r\n\r\n                        <div style={{display:'flex'}}>\r\n                            <div className='input-div input-div2' style={{marginRight:'1rem'}}>\r\n                                <span>Date</span>\r\n                                <input type='date' disabled= {handlerType } max=\"9999-12-31\" value={taskData.date} placeholder=\"YYYY-MM-DD\" name='date' onChange={changeHandler}  required/>\r\n                            </div>\r\n                            <div className='input-div input-div2'>\r\n                                <span>Time</span>\r\n                                <Dropdown label={timelabel}  handlerType={handlerType } selectHandler={selectHandler} iconName='clock' selectList={timeInputList}/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='input-div'>\r\n                            <span>Assign User</span>\r\n                            <select name='assignedUser' disabled= {handlerType } id='assignedUser' onChange={changeHandler}>\r\n                                <option value=''>--please select an option--</option>\r\n                                {\r\n                                    assin_userList.map((t)=>(\r\n                                        \r\n                                        <option name={t.name} value={t.user_id}>{t.name}</option>\r\n                                        \r\n                                    ))\r\n                                    \r\n                                }\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div style={{display:'flex',justifyContent:'flex-end',margin:'2rem 0rem 0 1rem'}}>\r\n                            <CustomButton name='Cancel' style={{backgroundColor:'transparent',color:'black', borderColor:'black', borderRadius:'5px'}} \r\n                                clickHandler={()=>closeHandler(previousState=>!previousState)}\r\n                            />\r\n                            {\r\n                            \r\n                            handlerType === true ?  null :\r\n                            <CustomButton name='Save' style={{marginRight:'0',backgroundColor:'#149c3b', border:'none', borderRadius:'5px' }}\r\n                            />\r\n                                \r\n                            }\r\n                        </div>\r\n                    </form>  \r\n            </div>\r\n            </div>\r\n            \r\n        </React.Fragment>, document.getElementById('modal')\r\n    )\r\n}\r\nconst mapsStateToProps= state =>({\r\n    currentUser: state.user.currentUser,\r\n    team: state.team.teamDetails,\r\n})\r\nconst mapDispatchToProps= dispatch =>({\r\n\r\n    getTaskDetails: tasks=> dispatch(getTaskDetails(tasks))\r\n})\r\n\r\nexport default connect(mapsStateToProps,mapDispatchToProps)(AddModal);\r\n","import React,{useState} from 'react';\r\nimport AddModal from '../AddModal/AddModal';\r\nimport './Customcard.scss';\r\n\r\nconst Customcard = ({task,index,DeleteHandler}) => {\r\n\r\n    const [modalStatus, setmodalStatus] = useState(false);\r\n    const [view, setview] = useState(false)\r\n    const viewHandler=()=>{\r\n\r\n        setmodalStatus(previousState=>!previousState);\r\n        setview(previousState=>!previousState);\r\n    }\r\n\r\n    const EditHandler=()=>{\r\n        setview(false);\r\n        setmodalStatus(previousState=>!previousState);\r\n    }\r\n    \r\n   return (\r\n        <React.Fragment>\r\n            <div className='card-container'>\r\n                <div className='card-hd'>\r\n                    <span>TASK {index+1}</span>\r\n                </div>\r\n                <div className='card-body'>\r\n                    <div className='card-body-img'>img</div>\r\n                    <div className='card-body-msg'>\r\n                        <span>{task.task_msg}</span>\r\n                        <span>{task.task_date}</span>\r\n                    </div>\r\n                </div>\r\n                <div className='logo-container'>\r\n                        <i class=\"far fa-eye card-edit-logo\"  onClick={viewHandler} style={{color:'#3297a8'}} title='view the task'></i>\r\n                        <i className=\"fa fa-edit card-edit-logo\" onClick={EditHandler} title='Edit the task'></i>\r\n                        <i class=\"fas fa-trash-alt card-edit-logo\" style={{color:'rgb(245, 48, 48)'}} onClick={()=>DeleteHandler(task)} title='Delete'></i>\r\n                </div>\r\n            </div>\r\n                {\r\n                modalStatus === true ? <AddModal task={task} handlerType={view} httpMethod='PUT' closeHandler={setmodalStatus}/> : null\r\n                }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default Customcard\r\n","import React,{useEffect} from 'react'\r\nimport './AllTasks.scss'\r\nimport {connect} from 'react-redux';\r\nimport {getTaskDetails} from '../Redux/TaskReducer/TaskAction'\r\nimport Customcard from '../Customs/CustomCard/Customcard'\r\nimport { useHistory } from 'react-router';\r\n\r\nconst AllTasks = ({tasks,currentUser,getTaskDetails}) => {\r\n\r\n  let history=useHistory();\r\n\r\n  const DeleteHandler=(task)=>{\r\n    let isDeleted = window.confirm('Are you sure to delete this task?');\r\n    var taskName = task.task_msg;\r\n    if(isDeleted){\r\n        fetch('https://stage.api.sloovi.com/task/lead_6996a7dcdddc4af3b4f71ccb985cea38/' + task.id,{\r\n            method : 'DELETE',\r\n            headers : {\r\n            'Authorization': 'Bearer ' + currentUser.token,\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',          \r\n          }\r\n        }).then(response=> response.json()).then(data=> {\r\n          if(data.status==='success' && data.message==='Deleted successfully'){\r\n            fetch('https://stage.api.sloovi.com/task/lead_6996a7dcdddc4af3b4f71ccb985cea38',{\r\n              method:'GET',\r\n              headers : {\r\n                  'Authorization': 'Bearer ' + currentUser.token,\r\n                  'Accept': 'application/json',\r\n                  'Content-Type': 'application/json',          \r\n                }\r\n          }).then(response=>response.json()).then(data=>{\r\n              getTaskDetails(data.results)\r\n          })\r\n\r\n          }\r\n        })\r\n        \r\n        alert(`SuccessFully Deleted task--> ${taskName}`);\r\n    }\r\n}\r\n\r\n    useEffect(()=>{\r\n        \r\n      if(currentUser === null || currentUser === undefined)\r\n          history.push('/login');\r\n\r\n        if(currentUser !== null )\r\n        {\r\n        fetch('https://stage.api.sloovi.com/task/lead_6996a7dcdddc4af3b4f71ccb985cea38',{\r\n            method:'GET',\r\n            headers : {\r\n                'Authorization': 'Bearer ' + currentUser.token,\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',          \r\n              }\r\n        }).then(response=>response.json()).then(data=>{\r\n            getTaskDetails(data.results)\r\n        })\r\n    }\r\n    },[currentUser])\r\n \r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n          { currentUser !== null ? \r\n            <div className='tks-container'>\r\n               { tasks !== null ? (\r\n                   tasks.map( (task,index) => (\r\n                        <Customcard task={task} DeleteHandler={DeleteHandler} index={index}/>\r\n               )))\r\n             : null\r\n            }\r\n            </div> :\r\n\r\n        <div className='noRec-container'>\r\n            <p>No records...</p>\r\n        </div>\r\n}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nconst mapsStateToProps= state=>({\r\n    currentUser: state.user.currentUser,\r\n    tasks: state.tasks.taskDetails\r\n})\r\n\r\n  \r\n  const mapDispatchToProps = dispatch=>({\r\n  \r\n    getTaskDetails : taskDetails => dispatch(getTaskDetails(taskDetails))\r\n  \r\n  })\r\n\r\n\r\nexport default connect(mapsStateToProps,mapDispatchToProps)(AllTasks)\r\n","import React,{useState,useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './Taskpage.scss'\r\nimport AddModal from '../Customs/AddModal/AddModal';\r\n\r\n\r\nconst TaskPage = () => {\r\n    \r\n  const [open, setopen] = useState(false);\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n          <div className='tk-con'>\r\n            <div className='tk-div tk-div-all'>\r\n                <Link to='/alltasks' className='tk-Link'>Explore all tasks</Link>\r\n            </div>\r\n            <div className='tk-div tk-div-add'>\r\n                <div onClick={()=>setopen(previousState=>!previousState)}>Add a task</div>\r\n            </div>\r\n          </div>\r\n          {open ===true ? <AddModal closeHandler={setopen} httpMethod='POST'/> : null}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nexport default TaskPage\r\n","import React,{useEffect} from 'react';\nimport {Route,Switch,Redirect} from 'react-router-dom';\nimport Homepage from './Homepage/Homepage';\nimport Header from './Header/Header';\nimport Loginpage from './Loginpage/Loginpage';\nimport AllTasks from './AllTasks/AllTasks';\nimport {connect } from 'react-redux';\nimport {setCurrentUser,setCurrentUserDetails} from './Redux/UserReducer/userAction'\nimport {setTeamDetails} from './Redux/TeamReducer/TeamAction'\nimport TaskPage from './Taskpage/TaskPage';\n\nfunction App({setCurrentUser,setCurrentUserDetails,setTeamDetails,currentUser}) {\n\n\nuseEffect(() => {\n\n  let userData = JSON.parse(localStorage.getItem('currentUser'));\n  if(userData !== null && currentUser ===null )\n  {\n  \n  setCurrentUser(userData);\n  fetch('https://stage.api.sloovi.com/user',{\n    method:'GET',\n    headers : {\n        'Authorization': 'Bearer ' + userData.token,\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',          \n      }\n}).then(response=>response.json()).then(data=>{\n  setCurrentUserDetails(data.results)\n})  \n\nfetch('https://stage.api.sloovi.com/team',{\n  method:'GET',\n  headers : {\n    'Authorization': 'Bearer ' + userData.token,\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',          \n  }\n}).then(response=>response.json()).then(data=>{\n  setTeamDetails(data.results)\n  console.log(data.results)\n})\n  }\n}, [currentUser])\n\n  return (\n      <React.Fragment>\n        <Header/>\n        <Switch>\n          <Route  exact path='/' component={Homepage}  />\n          <Route  exact path='/home' component={Homepage}  />\n          <Route  exact path='/alltasks' component={AllTasks}  />\n          <Route  exact path='/login' component={Loginpage}>\n            {currentUser !=null ? <Redirect to='/home'/>: <Loginpage/>}\n          </Route>\n          <Route  exact path='/tasks' component={TaskPage}>\n            {currentUser  === null ? <Redirect to='/login'/> : <TaskPage/>}\n          </Route>\n        </Switch>\n      </React.Fragment>\n\n\n  );\n}\n\nconst mapsStateToProps = state =>({\n  currentUser : state.user.currentUser\n})\n\nconst mapDispatchToProps = dispatch=>({\n\n  setCurrentUser : user=> dispatch(setCurrentUser(user)),\n  setCurrentUserDetails : userDetails=> dispatch(setCurrentUserDetails(userDetails)),\n  setTeamDetails : teamDetails => dispatch(setTeamDetails(teamDetails))\n\n})\n\nexport default connect(mapsStateToProps,mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const INITIAL_STATE ={\r\n    currentUser: null,\r\n    currentUserDetails: null\r\n};\r\n\r\nexport const userReducer=(state=INITIAL_STATE,action)=>{\r\n\r\n    switch (action.type){\r\n        case 'SET_CURRENT_USER':\r\n            return{\r\n                ...state,\r\n                currentUser: action.payload\r\n            };\r\n        case 'SET_CURRENT_USER_DETAILS':\r\n            return{\r\n                ...state,\r\n                currentUserDetails: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","const INITIAL_STATE ={\r\n    teamDetails: null\r\n};\r\n\r\nexport const teamReducer=(state=INITIAL_STATE,action)=>{\r\n\r\n    switch (action.type){\r\n        case 'SET_TEAM_DETAILS':\r\n            return{\r\n                ...state,\r\n                teamDetails: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","const INITIAL_STATE ={\r\n    taskDetails: null\r\n};\r\n\r\nexport const taskReducer=(state=INITIAL_STATE,action)=>{\r\n\r\n    switch (action.type){\r\n        case 'GET_TASK_DETAILS':\r\n            return{\r\n                ...state,\r\n                taskDetails: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}","import {combineReducers} from 'redux'\r\nimport {userReducer} from './UserReducer/userReducer'\r\nimport {teamReducer} from './TeamReducer/TeamReducer'\r\nimport {taskReducer} from './TaskReducer/TaskReducer'\r\n\r\nexport default combineReducers({\r\n    user : userReducer,\r\n    team : teamReducer,\r\n    tasks: taskReducer\r\n})","import {createStore} from 'redux';\r\nimport rootReducer from './rootReducer';\r\n\r\n\r\nconst store = createStore(rootReducer);\r\n\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport{ BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './Redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}